<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <docs>https://blogs.law.harvard.edu/tech/rss</docs>
    <title>malware on theyknow</title>
    <link>https://domain.example/tags/malware/</link>
    <description>Recent content in malware on theyknow</description>
    <image>
      <title>malware on theyknow</title>
      <link>https://domain.example/tags/malware/</link>
      <url>https://images.alphacoders.com/712/thumb-1920-712781.jpg</url>
    </image>
    <ttl>1440</ttl>
    <generator>After Dark 9.1.0 (Hugo 0.57.2)</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 06 Oct 2019 14:52:41 UT</lastBuildDate>
    <atom:link href="https://domain.example/tags/malware/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sunday honeypot analysis</title>
      <link>https://domain.example/post/honeypot-analysis/</link>
      <pubDate>Sat, 05 Oct 2019 23:00:00 UT</pubDate>
      <dc:creator>theyknow</dc:creator>
      <guid>https://domain.example/post/honeypot-analysis/</guid>
      <description>About the Internet Strom Center and Dshield The Internet Storm Center (ISC) was created in 2001 and has been analyzing threats and problems since then with the help of volunteers around the world. In their own words: &amp;ldquo;The ISC uses the DShield distributed intrusion detection system for data collection and analysis. DShield collects data about malicious activity from across the Internet. This data is cataloged and summarized and can be used to discover trends in activity, confirm widespread attacks, or assist in preparing better firewall rules.</description>
      <category domain="https://domain.example/categories/post">Post</category>
      <content:encoded><![CDATA[ About the Internet Strom Center and Dshield The Internet Storm Center (ISC) was created in 2001 and has been analyzing threats and problems since then with the help of volunteers around the world. In their own words: &amp;ldquo;The ISC uses the DShield distributed intrusion detection system for data collection and analysis. DShield collects data about malicious activity from across the Internet. This data is cataloged and summarized and can be used to discover trends in activity, confirm widespread attacks, or assist in preparing better firewall rules.&amp;rdquo;
Pretty cool, right? Volunteers can set up DShield on a Raspberry Pi for example, or a VPS like I did, save in DShield their API key from their ISC account, and reports will be sent to ISC twice an hour! And you have a full overview of what and who has been targeting your honey pot as well as 404 reports. Here is how it looks:
As you can see, today there has been already over 5.000 reported scans of my honeypot (and it&amp;rsquo;s only 3pm here) and I can also see more info about the sources:
Here is an example of a source that has been scanning my honeypot today a lot for port 22. Of course, these scans are rarely made by an actual hacker, but rather by bots that were created by different hacking organizations including state-sponsored groups and that are looking for vulnerable systems on the internet 24&amp;frasl;7. As you can see, this IP comes from China and ISC gives a lot more info on the page too.
My long-term plan is to develop a python script that would take each reports available from a certain date range, and build a more interesting report out of this larger sample instead of presenting only one day. If you want to check a specific day in the past, you need to download an excel report and my excel skills are terrible so let&amp;rsquo;s stick to Sunday as ISC provides use already with a nice report page for today. Alright, let&amp;rsquo;s have a look!

The ports The most important piece of information is the targeted ports. It gives us a better understanding of the threats currently out in the wild. If there is a clear spike in the scan of a particular port it indicates the beginning or return of a broad-based attacks, or some type of worm that uses vulnerable systems to scan for more victims after it infects them.
Here we can see that my honeypot has been largely scanned for port 22, which is the standard port for the SSH remote login protocol. I have noticed that it stays as the top 3 most scanned port everyday, probably to try brute-forcing it (get access to the machine by ssh and you&amp;rsquo;re in&amp;hellip;) and also possibly to find a response from two old trojans that are possibly still active, like Shaft:
Name: Shaft
Ports: 22, 5002, 18753 (UDP), 20432, 20433 (UDP)
Files: idle - 28,969 bytes tcp.log - ??? bytes pp.pl - 2,795 bytes sniff.pid - 6 bytes s - 7,654 bytes chattr - 7,656 bytes vi - 437,428 bytes tcsh - 262,756 bytes ps - 31,312 bytes shaftmaster - 25,123 bytes shaftnode - 15,184 bytes shaftnode.c - 19,806 bytes hitlist - ??? bytes
Created: Oct 1998
Actions: Distributed DoS tool / Steals passwords. Is able to either send UDP, TCP or ICMP floods, or all three at the same time.
Lenguage: Written in C.  The next most scanned is port 23. As I understand it, this one has always been a clear favorite and, as explained in this ISC report, the exploit compromises telnet servers following this procedure:
1- brute force password (usually a well known default password)
2- Download additional malware via ftp/http or tftp (typically multiple binaries for various architectures)
3- run the malware, which will typically setup a client for a DDoS botnet.
So if you&amp;rsquo;re running a telnet server: change your default password!
The 3rd most scanned was port 465 and there has been a lot going on since 1995 around this port! But realted to security, there was not much information about why this port should be scanned so much. I found the CVE-2011-4015 which &amp;ldquo;allows remote attackers to cause a denial of service (interface queue wedge) via malformed UDP traffic on port 465, aka Bug ID CSCts48300&amp;rdquo;. Not too exciting.
Port 445 was also heavily scanned. This port can be used by hackers to remotely commandeer Windows machines, and the overall consensus is that you do NOT want this port to be exposed to the internet. Just have a look at this terrible list of trojans and worms.
One port that has been scanned a lot more in the last couple of months is port 1443:
As explained in CVE-2014-4684, &amp;ldquo;the database server in Siemens SIMATIC WinCC before 7.3, as used in PCS7 and other products, allows remote authenticated users to gain privileges via a request to TCP port 1433&amp;rdquo;. Interesting that the port for this CVE from 2014 has been scanned for a lot in the last 2 months&amp;hellip;

The sources Three main IP come out on top:
 218.92.0.208: China. Bruteforcing port 80 and 22. 92.118.38.53: Romania. Fairly new, not much info about previous reports. 112.85.42.72: China. Old IP used for Forum spamming, now an Asterisk VoIP and port 22 Scanner.  
The rest of the world Here is more details about all the info collected by the DShield honeypots around the world:
And the top 10 offensive IPs where I added the country of origin: There is a lot more information but I thought it was already a good start! I had a lot of fun putting all this info together and hopefully I can do a similar one every Sunday. Please have a look at DShield and consider contributing to the project. If you need help setting it up, feel free to contact me on Twitter!
]]></content:encoded>
    </item>
    <item>
      <title>Writeup: TRAFFIC ANALYSIS EXERCISE</title>
      <link>https://domain.example/post/malware-traffic-analysis/</link>
      <pubDate>Fri, 09 Aug 2019 23:00:00 UT</pubDate>
      <dc:creator>theyknow</dc:creator>
      <guid>https://domain.example/post/malware-traffic-analysis/</guid>
      <description>Malware Traffic Analysis @malware_traffic&amp;rsquo;s blog has a lot of knowledge so I highly recommend to bookmark it somewhere. The real treasure is of course the amazing exercises page. Depending on the exercise, you get a pcap and other files. The pcap file is a traffic capture which we can analyse in Wireshark and find out where things went wrong!
Being able to effectively analyse traffic is a very important skill for the security for any organisation.</description>
      <category domain="https://domain.example/categories/post">Post</category>
      <content:encoded><![CDATA[ Malware Traffic Analysis @malware_traffic&amp;rsquo;s blog has a lot of knowledge so I highly recommend to bookmark it somewhere. The real treasure is of course the amazing exercises page. Depending on the exercise, you get a pcap and other files. The pcap file is a traffic capture which we can analyse in Wireshark and find out where things went wrong!
Being able to effectively analyse traffic is a very important skill for the security for any organisation. It helps the security team to find out where the problem happened and how to mitigate it. It is also super fun!

The first exercise Today, I&amp;rsquo;ll start with the exercise &amp;ldquo;2014-11-16 - TRAFFIC ANALYSIS EXERCISE&amp;rdquo;. The writeup will be about the level 1 and level 2 questions this time:
LEVEL 1 QUESTIONS:
1) What is the IP address of the Windows VM that gets infected?
2) What is the host name of the Windows VM that gets infected?
3) What is the MAC address of the infected VM?
4) What is the IP address of the compromised web site?
5) What is the domain name of the compromised web site?
6) What is the IP address and domain name that delivered the exploit kit and malware?
LEVEL 2 QUESTIONS:
1) What is the redirect URL that points to the exploit kit (EK) landing page?
2) Besides the landing page (which contains the CVE-2013-2551 IE exploit), what other exploit(s) sent by the EK?
3) How many times was the payload delivered?
4) Submit the pcap to VirusTotal and find out what snort alerts triggered. What are the EK names are shown in the Suricata alerts?

Level 1 questions 1) What is the IP address of the Windows VM that gets infected?
The source of all traffic is 172.16.165.165, so I can assume that this is the infected VM.
2) What is the host name of the Windows VM that gets infected?
There are many ways to check that as demonstrated in this article. I chose to filter the traffic on bootp to reveal the DHCP traffic. I selected one of the frames, and in the frame details, I went to Bootstrap Protocol and then in the options we find the hostname and MAC address: 3) What is the MAC address of the infected VM?
We got the MAC address in the 2nd question, but alternatively, we can see it in all the frames&amp;rsquo; details: 4) What is the IP address of the compromised web site?
If we filter the GET requests (http.request.method == GET), we can follow the referers. The user visited &amp;ldquo;ciniholland&amp;rdquo; and through the referers of each GET requests, we see that it leads to a very suspicious website which initiates downloads on the machine.
So I assume ciniholland.nl/ is the compromised website and its IP is 82.150.140.30
5) What is the domain name of the compromised web site?
Answered above: ciniholland.nl/
6) What is the IP address and domain name that delivered the exploit kit and malware?
If we follow the GET requests, we can clearly see that the final website initiates downloads on the now compromised machine: And its IP address is 37.200.69.143

Level 2 questions 1) What is the redirect URL that points to the exploit kit (EK) landing page?
As I checked the different GET requests in the first level, I found out that the referer to the first EK landing page (stand.trustandprobaterealty.com) was: 24corp-shop.com
I can also export the HTML object (File &amp;ndash;&amp;gt; Export Object &amp;ndash;&amp;gt; HTTP), then download the 24corp-shop.com html file. Open it in a text editor and I find: 2) Besides the landing page (which contains the CVE-2013-2551 IE exploit), what other exploit(s) sent by the EK?
By checking the the HTML object (File &amp;ndash;&amp;gt; Export Object &amp;ndash;&amp;gt; HTTP), I can see two other exploits: a Flash and a Java. Alternatively, I had found them during my first recon in the list of HTTP GET requests by following the HTTP stream: 3) How many times was the payload delivered?
I&amp;rsquo;m not 100% sure, but I can&amp;rsquo;t see any other name for the payload than x-msdownload, and a quick filtering give us 3 deliveries: 4) Submit the pcap to VirusTotal and find out what snort alerts triggered. What are the EK names are shown in the Suricata alerts?
I didn&amp;rsquo;t know about VirusTotal, so it was a nice question to introduce it. Here is what I found there: ET CURRENT_EVENTS GoonEK ET CURRENT_EVENTS Goon/Infinity URI Struct EK ET CURRENT_EVENTS RIG EK

This is all for today! I learned a lot through each question. It&amp;rsquo;s a quick writeup, but I spend a lot of time digging for the answers. I won&amp;rsquo;t do a writeup for all the exercises, but I will make one for the most interesting exercises.
Thank you for reading this and get in contact if you have any question, recommendation, spotted mistakes, etc.
]]></content:encoded>
    </item>
  </channel>
</rss>
